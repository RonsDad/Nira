"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/ui/flip-card-carousel/CardContent.tsx":
/*!**************************************************************!*\
  !*** ./src/components/ui/flip-card-carousel/CardContent.tsx ***!
  \**************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CardContent: () => (/* binding */ CardContent),\n/* harmony export */   createCardTexture: () => (/* binding */ createCardTexture)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n\n\nfunction createCardTexture(content, isFront) {\n    let width = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1024, height = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1536;\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n        throw new Error('Could not get canvas context');\n    }\n    // Enable better text rendering\n    ctx.imageSmoothingEnabled = true;\n    ctx.imageSmoothingQuality = 'high';\n    if (isFront) {\n        // White border background\n        ctx.fillStyle = '#ffffff';\n        ctx.fillRect(0, 0, width, height);\n        // Blue gradient background with padding for white border\n        const borderWidth = width * 0.04; // Thicker border for elegance\n        const gradient = ctx.createLinearGradient(0, 0, 0, height);\n        gradient.addColorStop(0, '#07015D');\n        gradient.addColorStop(1, '#050022');\n        ctx.fillStyle = gradient;\n        ctx.fillRect(borderWidth, borderWidth, width - borderWidth * 2, height - borderWidth * 2);\n        // Add inner glow for beauty\n        ctx.shadowColor = 'rgba(255, 255, 255, 0.3)';\n        ctx.shadowBlur = 20;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n        // Label in white - BIGGER!\n        if (content.label) {\n            ctx.fillStyle = '#ffffff';\n            ctx.font = \"\".concat(width * 0.045, 'px -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif');\n            ctx.textAlign = 'left';\n            ctx.letterSpacing = '2px';\n            ctx.fillText(content.label.toUpperCase(), borderWidth + width * 0.06, borderWidth + height * 0.06);\n        }\n        // Title in white - MUCH BIGGER!\n        ctx.fillStyle = '#ffffff';\n        ctx.font = \"bold \".concat(width * 0.08, 'px -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif');\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        // Word wrap for title\n        const words = content.title.split(' ');\n        const lineHeight = width * 0.08;\n        const lines = [];\n        let currentLine = '';\n        const maxWidth = width * 0.8;\n        const yStart = height * 0.5;\n        for(let n = 0; n < words.length; n++){\n            const testLine = currentLine + words[n] + ' ';\n            const metrics = ctx.measureText(testLine);\n            const testWidth = metrics.width;\n            if (testWidth > maxWidth && n > 0) {\n                lines.push(currentLine.trim());\n                currentLine = words[n] + ' ';\n            } else {\n                currentLine = testLine;\n            }\n        }\n        lines.push(currentLine.trim());\n        // Add subtle shadow for text\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n        ctx.shadowBlur = 6;\n        ctx.shadowOffsetX = 2;\n        ctx.shadowOffsetY = 2;\n        lines.forEach((line, index)=>{\n            ctx.fillText(line, width / 2, yStart + index * lineHeight);\n        });\n        // Reset shadow\n        ctx.shadowColor = 'transparent';\n        ctx.shadowBlur = 0;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n    } else {\n        // Back of card - white border background\n        ctx.fillStyle = '#ffffff';\n        ctx.fillRect(0, 0, width, height);\n        // Blue gradient background with padding for white border\n        const borderWidth = width * 0.04; // Thicker border for elegance\n        const gradient = ctx.createLinearGradient(0, 0, 0, height);\n        gradient.addColorStop(0, '#07015D');\n        gradient.addColorStop(1, '#050022');\n        ctx.fillStyle = gradient;\n        ctx.fillRect(borderWidth, borderWidth, width - borderWidth * 2, height - borderWidth * 2);\n        // Content text in white - BIGGER!\n        ctx.fillStyle = '#ffffff';\n        const fontSize = Math.floor(width * 0.045); // Much bigger font\n        ctx.font = \"\".concat(fontSize, 'px -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif');\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        // Word wrap for content\n        const words = content.text.split(' ');\n        const lineHeight = fontSize * 1.5;\n        const lines = [];\n        let currentLine = '';\n        const paddedWidth = width - borderWidth * 4;\n        const maxWidth = paddedWidth * 0.9;\n        const textX = borderWidth * 2;\n        const textY = borderWidth * 2;\n        for(let n = 0; n < words.length; n++){\n            const testLine = currentLine + words[n] + ' ';\n            const metrics = ctx.measureText(testLine);\n            const testWidth = metrics.width;\n            if (testWidth > maxWidth && n > 0) {\n                lines.push(currentLine.trim());\n                currentLine = words[n] + ' ';\n            } else {\n                currentLine = testLine;\n            }\n        }\n        lines.push(currentLine.trim());\n        // Add shadow for better readability\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n        ctx.shadowBlur = 4;\n        ctx.shadowOffsetX = 1;\n        ctx.shadowOffsetY = 1;\n        lines.forEach((line, index)=>{\n            ctx.fillText(line, textX, textY + index * lineHeight);\n        });\n        // Reset shadow\n        ctx.shadowColor = 'transparent';\n        ctx.shadowBlur = 0;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n    }\n    const texture = new three__WEBPACK_IMPORTED_MODULE_1__.CanvasTexture(canvas);\n    texture.needsUpdate = true;\n    texture.minFilter = three__WEBPACK_IMPORTED_MODULE_1__.LinearFilter;\n    texture.magFilter = three__WEBPACK_IMPORTED_MODULE_1__.LinearFilter;\n    return texture;\n}\nconst CardContent = (param)=>{\n    let { text, isFront, width, height } = param;\n    return null;\n};\n_c = CardContent;\nvar _c;\n$RefreshReg$(_c, \"CardContent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ui/flip-card-carousel/CardContent.tsx\n"));

/***/ })

});